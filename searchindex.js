Search.setIndex({"docnames": ["apidocs", "elemeta", "elemeta.dataset", "elemeta.nlp", "elemeta.nlp.extractors", "elemeta.nlp.extractors.high_level", "elemeta.nlp.extractors.low_level", "elemeta.nlp.runners", "faq", "getting_started", "how_to_guides/create_low_level_extractor", "how_to_guides/custom_extractor", "how_to_guides/extractor_suite", "how_to_guides/index", "how_to_guides/single_extractor", "index", "metafeatures", "modules", "roadmap", "supported_languages", "use_cases/eda", "use_cases/index", "use_cases/modeling", "use_cases/monitoring"], "filenames": ["apidocs.rst", "elemeta.rst", "elemeta.dataset.rst", "elemeta.nlp.rst", "elemeta.nlp.extractors.rst", "elemeta.nlp.extractors.high_level.rst", "elemeta.nlp.extractors.low_level.rst", "elemeta.nlp.runners.rst", "faq.rst", "getting_started.rst", "how_to_guides/create_low_level_extractor.rst", "how_to_guides/custom_extractor.rst", "how_to_guides/extractor_suite.rst", "how_to_guides/index.rst", "how_to_guides/single_extractor.rst", "index.rst", "metafeatures.rst", "modules.rst", "roadmap.rst", "supported_languages.rst", "use_cases/eda.rst", "use_cases/index.rst", "use_cases/modeling.rst", "use_cases/monitoring.rst"], "titles": ["API Docs", "elemeta package", "elemeta.dataset package", "elemeta.nlp package", "elemeta.nlp.extractors package", "elemeta.nlp.extractors.high_level package", "elemeta.nlp.extractors.low_level package", "elemeta.nlp.runners package", "FAQ", "Getting Started", "Create Low Level Extractor", "Custom Extractor", "Extractor Suite", "How to Guides", "Single Extractor", "Elemeta: Metafeature Extraction for Unstructured Data", "Metafeatures", "elemeta", "Roadmap", "Supported Languages", "EDA", "Use Cases", "Modeling", "Monitoring"], "terms": {"elemeta": [0, 9, 10, 11, 12, 14, 16, 19, 20, 21, 23], "packag": [0, 17, 21], "subpackag": [0, 17], "dataset": [0, 1, 5, 9, 12, 16, 17, 20], "nlp": [0, 1, 8, 9, 10, 11, 12, 14, 16, 17, 20, 21, 23], "modul": [0, 17], "content": [0, 17, 20, 23], "submodul": [1, 3, 4, 17], "get_avengers_endgame_tweet": [1, 2, 9], "get_imdb_review": [1, 2, 12], "get_tweets_lik": [1, 2, 20], "extractor": [1, 3, 7, 13, 18], "runner": [1, 3, 9, 11, 12, 20], "metafeature_extractors_runn": [1, 3, 9, 11, 12, 20, 23], "pair_metafeature_extractors_runn": [1, 3], "english_punctu": [1, 3, 5], "english_stopword": [1, 3], "extended_punctu": [1, 3, 5], "featur": [1, 8, 15, 21, 23], "extract": [1, 4, 5, 6, 7, 8, 11, 12, 16, 19, 20, 21, 23], "datafram": [2, 7, 12, 20, 23], "high_level": [3, 4, 12, 14], "acronym_count": [3, 4, 11, 12], "avg_word_length": [3, 4, 11, 12], "capital_letters_ratio": [3, 4, 11, 12], "date_count": [3, 4, 11, 12], "detect_langauge_langdetect": [3, 4], "email_count": [3, 4, 11, 12], "embed": [3, 4, 15, 21, 23], "emoji_count": [3, 4, 11, 12, 20], "hashtag_count": [3, 4, 11, 12], "hinted_profanity_sentence_count": [3, 4], "hinted_profanity_words_count": [3, 4], "injection_similar": [3, 4], "jailbreak_similar": [3, 4], "link_count": [3, 4, 11, 12], "mention_count": [3, 4, 11, 12], "must_appear_words_percentag": [3, 4], "number_count": [3, 4, 11, 12], "out_of_vocabulary_count": [3, 4, 11, 12], "pii_identifi": [3, 4], "punctuation_count": [3, 4, 11, 12], "refusal_similar": [3, 4], "regex_match_count": [3, 4, 11, 12], "semantic_text_pair_similar": [3, 4], "sentence_avg_length": [3, 4, 11, 12], "sentence_count": [3, 4, 11, 12], "sentiment_polar": [3, 4, 12, 14], "sentiment_subject": [3, 4], "special_chars_count": [3, 4, 11, 12], "stop_words_count": [3, 4, 11, 12], "syllable_count": [3, 4, 11, 12], "text_complex": [3, 4, 11, 12], "text_length": [3, 4, 11, 12, 23], "toxicity_extractor": [3, 4], "unique_word_count": [3, 4, 11, 12], "unique_word_ratio": [3, 4, 11, 12], "word_count": [3, 4, 11, 12], "word_regex_matches_count": [3, 4, 11, 12], "low_level": [3, 4, 10, 11], "abstract_text_metafeature_extractor": [3, 4, 11], "abstract_text_pair_metafeature_extractor": [3, 4], "avg_token_length": [3, 4, 10], "hinted_profanity_token_count": [3, 4], "must_appear_tokens_parentag": [3, 4], "regex_token_matches_count": [3, 4], "semantic_embedding_pair_similar": [3, 4], "semantic_text_to_group_similar": [3, 4], "tokens_count": [3, 4], "unique_token_count": [3, 4], "unique_token_ratio": [3, 4], "avg_check_bas": [3, 4], "length_check_bas": [3, 4], "metafeatureextractorsrunn": [3, 7, 9, 11, 12, 20, 23], "metafeature_extractor": [3, 7, 12], "run": [3, 5, 6, 7, 9, 11, 12], "run_on_datafram": [3, 7, 9, 12, 20, 23], "add_metafeature_extractor": [3, 7, 11, 12], "pairmetafeatureextractorsrunn": [3, 7], "pairmetafeatureextractorsrunnerresult": [3, 7], "input_1": [3, 6, 7], "input_1_and_2": [3, 7], "input_2": [3, 6, 7], "model_config": [3, 7], "model_field": [3, 7], "requir": [3, 7, 23], "pacakg": 3, "_": 3, "set": [3, 5, 6, 7, 12, 16], "all": [3, 5, 6, 7, 8, 9, 12, 16, 23], "punctuat": [3, 5, 16], "english": [3, 5, 14, 16, 19], "about": [3, 7, 9, 12, 16], "abov": [3, 16], "after": [3, 9], "again": [3, 20], "against": 3, "ain": 3, "am": [3, 16], "an": [3, 8, 10, 12, 15, 16, 23], "ani": [3, 5, 6, 7, 8, 23], "ar": [3, 4, 6, 8, 9, 10, 12, 13, 16, 19, 23], "aren": 3, "t": [3, 8, 16, 23], "becaus": [3, 16], "been": [3, 7, 10], "befor": 3, "being": 3, "below": [3, 20], "between": [3, 5, 6, 14, 16, 20, 21], "both": [3, 8, 13], "can": [3, 9, 10, 11, 12, 16, 20, 21, 23], "couldn": 3, "d": [3, 5, 16], "did": 3, "didn": 3, "do": [3, 10, 11], "doe": [3, 8, 9], "doesn": [3, 8], "don": [3, 8, 23], "down": 3, "dure": [3, 7], "each": 3, "few": [3, 9, 20], "from": [3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 20, 21], "further": 3, "had": [3, 12, 20], "hadn": 3, "ha": [3, 5, 10, 12, 16, 20], "hasn": 3, "have": [3, 7, 8, 9, 23], "haven": 3, "he": [3, 14, 16], "her": 3, "here": [3, 16, 20], "herself": 3, "him": 3, "himself": 3, "hi": [3, 9, 16], "how": [3, 5, 9, 12, 15, 16, 20], "i": [3, 5, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 23], "isn": 3, "": [3, 7, 10, 11, 16, 20, 23], "its": [3, 23], "itself": 3, "just": [3, 8, 9], "ll": 3, "m": 3, "ma": 3, "me": [3, 16], "mightn": 3, "more": [3, 8, 16, 20], "most": [3, 5], "mustn": 3, "my": [3, 16], "myself": 3, "needn": 3, "nor": 3, "now": [3, 10, 11, 16, 20], "o": 3, "off": 3, "onc": [3, 5, 6, 9, 12, 16], "onli": [3, 5, 16, 19, 23], "other": 3, "our": [3, 8, 9, 15, 20], "ourselv": 3, "out": [3, 10, 13, 16, 23], "over": 3, "own": [3, 11], "re": 3, "same": 3, "shan": 3, "she": 3, "should": [3, 7, 9], "ve": [3, 8], "shouldn": 3, "so": [3, 8, 23], "some": [3, 19], "than": [3, 8, 23], "theirs": 3, "them": [3, 5, 9, 10, 16], "themselv": 3, "thei": [3, 16], "thi": [3, 5, 6, 7, 8, 9, 11, 12, 14, 16, 20, 23], "those": [3, 10], "through": [3, 15, 21], "too": 3, "under": 3, "until": 3, "up": 3, "veri": [3, 5], "wa": [3, 16], "wasn": 3, "we": [3, 5, 6, 8, 10, 12, 20, 23], "were": 3, "weren": 3, "what": [3, 9, 16], "when": [3, 10], "where": [3, 5, 16], "which": 3, "while": [3, 19], "who": 3, "whom": 3, "why": 3, "won": 3, "wouldn": 3, "y": [3, 20], "you": [3, 8, 9, 10, 11, 12, 15, 16, 21, 23], "your": [3, 11, 16, 23], "yourself": 3, "yourselv": 3, "nltk": [3, 5, 16], "special": [3, 5, 16], "charter": 3, "acronymcount": [4, 5, 19], "avgwordlength": [4, 5, 19], "capitallettersratio": [4, 5, 19], "datecount": [4, 5, 19], "detectlanguag": [4, 5, 14, 19], "emailcount": [4, 5, 19], "emojicount": [4, 5, 19], "hashtagcount": [4, 5, 19], "hintedprofanitysentencecount": [4, 5, 19], "hintedprofanitywordscount": [4, 5, 19], "linkcount": [4, 5, 19], "mentioncount": [4, 5, 19], "mustappearwordspercentag": [4, 5], "numbercount": [4, 5, 19], "valid": [4, 5, 6, 7], "outofvocabularycount": [4, 5, 19], "punctuationcount": [4, 5, 19], "regexmatchcount": [4, 5, 12, 19], "sentenceavglength": [4, 5, 19], "sentencecount": [4, 5, 19], "sentimentpolar": [4, 5, 14, 19], "sentimentsubject": [4, 5, 19], "specialcharscount": [4, 5, 19], "stopwordscount": [4, 5, 19], "syllablecount": [4, 5, 19], "textcomplex": [4, 5, 19], "textlength": [4, 5, 19], "uniquewordcount": [4, 5], "uniquewordratio": [4, 5, 19], "wordcount": [4, 5, 19], "wordregexmatchescount": [4, 5, 19], "abstracttextmetafeatureextractor": [4, 5, 6, 7, 11], "abstracttextpairmetafeatureextractor": [4, 6, 7], "avgtokenlength": [4, 5, 6, 10], "hintedprofanitytokenscount": [4, 5, 6], "mustappeartokenspercentag": [4, 5, 6], "tokenregexmatchescount": [4, 5, 6], "tokenscount": [4, 5, 6], "uniquetokencount": [4, 5, 6], "uniquetokensratio": [4, 5, 6], "token": [4, 5, 6, 10], "callabl": [4, 5, 6], "str": [4, 5, 6, 7, 11, 12], "list": [4, 5, 6, 7, 12, 16], "condit": 4, "bool": [4, 5, 6, 7, 11], "float": [4, 5, 6, 12], "gener": [4, 18, 20], "avg": 4, "counter": [4, 5], "paramet": [4, 5, 6, 7, 10, 19], "function": [4, 5, 6, 10, 12], "split": [4, 10, 16, 19], "text": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 23], "compon": 4, "usual": 4, "word": [4, 5, 6, 14, 16, 19], "return": [4, 5, 6, 7, 11, 12, 16], "true": [4, 5, 6, 7, 11, 20], "count": [4, 5, 6, 16, 19], "receiv": [4, 20], "string": [4, 5, 6, 16], "output": 4, "length": [4, 5, 6, 16, 19], "accord": [4, 20], "type": [4, 5, 6, 7, 10], "int": [4, 5, 6, 12], "number": [4, 5, 6, 16, 20], "class": [5, 6, 7, 11], "name": [5, 6, 7, 12, 16], "none": [5, 6, 7, 12], "base": [5, 6, 7, 16], "acronym": [5, 16], "method": [5, 6, 7, 15], "word_token": 5, "exclude_list": 5, "give": [5, 6, 16], "averag": [5, 6, 16], "ratio": [5, 6, 16], "capit": [5, 16], "letter": [5, 16], "case": [5, 15, 23], "calcul": [5, 8, 16, 19, 23], "check": [5, 6], "lower": [5, 11], "date": [5, 16], "languag": [5, 14, 15, 16, 18, 20], "detect": [5, 23], "like": [5, 8, 15, 16, 20], "email": [5, 16], "input": [5, 7, 23], "regex": [5, 6, 12, 16], "mani": [5, 16, 20], "time": [5, 16], "found": [5, 13, 16], "emoji": [5, 16, 20], "hashtag": [5, 16], "sent_token": 5, "sentenc": [5, 6, 14, 16], "profan": [5, 6, 16], "lambda": [5, 10, 20], "link": [5, 16], "mention": [5, 16], "format": [5, 12, 16, 20], "someones_nam": [5, 16], "must_appear": [5, 6, 16], "For": [5, 10, 11, 14, 16, 20, 23], "given": [5, 6, 7, 11, 16], "percentag": [5, 6, 16], "appear": [5, 6, 16], "regexptoken": 5, "w": [5, 16], "vocabulari": [5, 16, 19], "default": [5, 12, 16, 19], "taken": [5, 16], "outsid": [5, 16], "must": [5, 6, 10], "mark": [5, 16], "match": [5, 6, 16], "sentiment": [5, 6, 16, 23], "polar": [5, 16], "analysi": [5, 15, 20, 23], "predict": [5, 20, 23], "want": [5, 6, 12, 16], "0": [5, 10, 11, 12, 14, 16, 20], "1": [5, 11, 12, 14, 16, 20, 23], "repres": 5, "neg": [5, 14, 16], "posit": [5, 14, 16], "subject": [5, 16], "score": [5, 16], "within": [5, 16, 19], "rang": [5, 14, 16], "object": [5, 7, 9, 16], "special_char": 5, "charact": [5, 16], "stop": [5, 16], "total": [5, 16], "syllabl": [5, 16], "metric": [5, 6, 7, 16, 23], "param": [5, 6, 7], "metadata": [5, 6, 7], "textstat": 5, "flesch_reading_eas": 5, "flesch": [5, 16], "read": [5, 16], "eas": [5, 16], "includ": [5, 15, 16], "whitespac": [5, 16], "except": [5, 6, 16], "implement": [5, 6, 10, 11], "abstractmetadataextractor": [5, 11, 12], "uniqu": [5, 6, 16], "distinct": [5, 16], "differ": [5, 16, 20], "valu": [5, 6, 7, 12, 16, 19, 23], "regardless": [5, 16], "exclude_tokens_list": [5, 6], "abc": 6, "represent": [6, 15, 21], "metafeatureextractor": 6, "hold": 6, "abstract": [6, 11], "abstractpairmetafeatureextractor": 6, "tokens_to_exclud": 6, "ration": 6, "abid": 6, "fals": [6, 7, 11, 20], "otherwis": 6, "include_tokens_list": 6, "len": 6, "filter": 6, "defin": [6, 7, 14], "relev": 6, "find": [6, 9, 16], "compute_intens": 7, "us": [7, 9, 10, 11, 12, 15, 16, 20, 23], "multipl": [7, 12], "metadataextractor": [7, 11, 12], "suppli": [7, 10, 12, 23], "option": 7, "df": [7, 9], "text_column": [7, 9, 12, 20, 23], "new": [7, 8, 12, 16], "column": [7, 9, 12, 20], "dict": [7, 12], "metafeature_value_dict": 7, "dictionari": 7, "metafeatur": [7, 12, 13, 14, 19, 20, 23], "input_1_extractor": 7, "input_2_extractor": 7, "input_1_and_2_extractor": 7, "pair": 7, "basemodel": 7, "attribut": 7, "model_computed_field": 7, "get": [7, 12, 15, 20], "comput": 7, "field": [7, 8], "model": [7, 8, 15, 16, 21, 23], "instanc": 7, "model_extra": 7, "extra": 7, "model_fields_set": 7, "construct": 7, "from_orm": 7, "json": 7, "parse_fil": 7, "parse_obj": 7, "parse_raw": 7, "schema": 7, "schema_json": 7, "update_forward_ref": 7, "classvar": 7, "configdict": 7, "configur": 7, "conform": 7, "pydant": 7, "config": 7, "fieldinfo": 7, "annot": 7, "map": 7, "replac": [7, 11], "__fields__": 7, "v1": 7, "still": 8, "open": [8, 15], "beta": 8, "test": [8, 9, 10, 11, 16, 19, 23], "intern": 8, "close": 8, "take": [8, 9], "mind": 8, "alwai": 8, "work": [8, 10, 11, 20, 23], "progress": 8, "see": [8, 16, 20, 23], "anyth": 8, "seem": 8, "quit": 8, "right": [8, 20], "would": 8, "add": [8, 11, 12], "someth": [8, 16], "project": [8, 23], "pleas": [8, 9, 10, 11, 15, 20, 23], "github": 8, "issu": [8, 23], "sourc": [8, 15], "develop": [8, 23], "maintain": [8, 23], "data": [8, 9, 20, 21, 23], "scienc": 8, "team": 8, "origin": [8, 12, 20], "capabl": 8, "enhanc": 8, "observ": [8, 23], "vision": [8, 21], "shift": 8, "approach": 8, "realiz": 8, "addit": [8, 10, 15, 18, 21], "applic": [8, 23], "eda": [8, 15, 21], "free": [8, 16], "softwar": 8, "happi": [8, 14], "accept": 8, "contribut": 8, "send": [8, 23], "inform": [8, 16, 19, 20, 23], "port": 8, "local": 8, "brand": 8, "formal": 8, "process": [8, 20], "yet": 8, "If": [8, 12], "feedback": 8, "go": [8, 15], "ahead": 8, "post": 8, "instal": 9, "python": [9, 15], "librari": [9, 13, 15, 16], "via": 9, "pip": 9, "exampl": [9, 10, 11, 14, 16, 20, 23], "import": [9, 10, 11, 12, 14, 20], "load": 9, "exist": [9, 12], "tweet": [9, 20], "head": 9, "follow": [9, 10, 11, 14, 20, 23], "api": [9, 10, 15, 16], "around": [9, 16], "minut": 9, "enrich": [9, 15, 20, 21], "standard": [9, 10], "pd": 9, "met": 9, "crazi": 9, "fox": 9, "sai": 9, "love": [9, 11, 14, 16], "robot": 9, "df_with_metafeatur": 9, "specif": 9, "good": [9, 12, 16], "life": [9, 12, 23], "To": [9, 12, 15], "quickli": [9, 15], "try": [9, 15], "quickstart": [9, 15, 23], "colab": [9, 10, 11, 15, 20, 23], "export": 10, "box": [10, 13], "let": [10, 11, 20], "2": [10, 12, 16], "my_simple_word_tokinz": 10, "my_simple_line_tokinz": 10, "n": 10, "lorem": 10, "ipsum": 10, "simpli": 10, "dummi": 10, "print": [10, 12, 20], "typeset": 10, "industri": 10, "ever": 10, "sinc": [10, 20], "1500": 10, "unknown": 10, "printer": 10, "took": 10, "gallei": 10, "scrambl": 10, "make": [10, 23], "specimen": 10, "book": 10, "nlorem": 10, "nwhen": 10, "two": [10, 16, 19], "version": 10, "atl_for_word": 10, "atl_for_lin": 10, "5": [10, 11, 12, 16], "81": 10, "full": [10, 11, 16, 20, 23], "googl": [10, 11, 16, 20, 23], "It": [11, 15], "possibl": [11, 23], "creat": [11, 13, 16], "fit": 11, "need": [11, 23], "ispalindromeextractor": 11, "palindrom": 11, "def": 11, "self": 11, "normalized_text": 11, "ip": 11, "cat": [11, 16], "taco": 11, "easili": 11, "metadataextractorrunn": 11, "never": 11, "odd": 11, "even": 11, "detect_langaug": [11, 12, 20], "en": [11, 12, 14, 16], "92": 11, "8": [11, 16], "4": [11, 16], "must_appear_words_ratio": [11, 12], "17": [11, 16], "3": [11, 12, 16], "07142857142857142": 11, "is_palindrome_extractor": 11, "ca": 11, "119": [11, 16], "19": [11, 16], "11": [11, 12], "1111111111111111": 11, "appli": [12, 20], "union": 12, "sp": [12, 14], "ld": [12, 14], "7096": 12, "select": [12, 16], "113": 12, "875": 12, "7": [12, 20], "40": 12, "9": [12, 16], "2222222222222223": 12, "034482758620689655": 12, "number_of_good_in_text": 12, "The": [12, 20], "review": 12, "200": 12, "shape": [12, 20], "transform": [12, 20], "29": 12, "There": 13, "varieti": 13, "custom": 13, "singl": 13, "suit": 13, "low": 13, "level": 13, "code": 14, "assum": 14, "automat": 14, "negat": 14, "revers": 14, "superwis": [14, 16, 23], "6369": 14, "hate": [14, 16], "hater": 14, "7845": 14, "super": 14, "excit": 14, "5337": 14, "detect_langauge_fasttext": 14, "\u05d4\u05d8\u05e7\u05e1\u05d8": 14, "\u05d4\u05d6\u05d4": 14, "\u05d1\u05e2\u05d1\u05e8\u05d9\u05ea": 14, "ce": 14, "est": 14, "fran\u00e7ai": 14, "fr": 14, "\u8fd9\u6bb5\u6587\u5b57\u662f\u6cd5\u8bed": 14, "zh": 14, "With": 15, "abl": [15, 23], "explor": [15, 21], "monitor": [15, 21], "tabular": [15, 21], "provid": [15, 23], "straightforward": 15, "imag": [15, 18], "kei": 15, "usag": [15, 16, 23], "exploratori": 15, "analyz": 15, "investig": 15, "summar": [15, 23], "main": 15, "characterist": 15, "emploi": 15, "visual": [15, 23], "util": 15, "structur": [15, 23], "ml": [15, 23], "techniqu": 15, "typic": 15, "latent": 15, "engin": 15, "altern": 15, "simpler": 15, "decis": 15, "tree": 15, "start": [15, 20, 23], "section": 15, "guid": [15, 23], "support": 15, "doc": 15, "faq": 15, "roadmap": 15, "current": [16, 19, 21], "group": [16, 19], "statist": [16, 23], "contextu": 16, "technic": [16, 19], "etc": [16, 19, 21], "regard": [16, 19], "context": [16, 19], "explan": 16, "exit": 16, "refer": 16, "move": 16, "Will": 16, "And": 16, "h": 16, "hee": 16, "year": 16, "old": 16, "100": 16, "one": [16, 20, 23], "dai": 16, "corpu": 16, "rick": 16, "said": 16, "wubba": 16, "lubba": 16, "dub": 16, "oov": 16, "wabba": 16, "hello": 16, "inigo": 16, "montoya": 16, "kill": 16, "father": 16, "prepar": 16, "die": 16, "22": 16, "66668": 16, "13": 16, "538": 16, "70": 16, "afraid": 16, "petrifi": 16, "half": 16, "ok": 16, "pass": 16, "twice": 16, "lior": 16, "gmail": 16, "ac": 16, "il": 16, "better": 16, "http": 16, "com": 16, "me2": 16, "elad": 16, "hyperemotion": 16, "f": 16, "lol": 16, "entri": 16, "due": 16, "januari": 16, "4th": 16, "2017": 16, "00pm": 16, "01": 16, "15": 16, "2005": 16, "acm": 16, "inc": 16, "associ": 16, "mean": 16, "utterli": 16, "cake": 16, "669": 16, "693": 16, "fail": 16, "langdetect": 16, "Its": 16, "best": 16, "almost": 16, "rest": 16, "as\u00ed": 16, "bla": 16, "e": 16, "se": 16, "6": 16, "better_profan": 16, "fuck": 16, "sh": 16, "leav": 16, "countri": 16, "fine": 16, "product": [16, 23], "biodiesel": 16, "enzymat": 16, "transesterifc": 16, "non": 16, "edibl": 16, "salvadora": 16, "persica": 16, "pilu": 16, "oil": 16, "crude": 16, "coconut": 16, "solvent": 16, "system": 16, "34": 16, "similar": 16, "semantictextpairsimilar": 16, "8071529865264893": 16, "bye": 16, "36858582496643066": 16, "dog": 16, "puppi": 16, "8040066361427307": 16, "known": 16, "inject": 16, "instruct": 16, "wow": 16, "fantast": 16, "forget": 16, "previou": 16, "task": 16, "focu": 16, "show": [16, 20], "prompt": 16, "jailbreak": 16, "ignor": 16, "instead": 16, "tell": 16, "initi": 16, "refus": 16, "respons": 16, "sorri": 16, "assist": 16, "tensor": 16, "vector": 16, "size": 16, "384": 16, "torch": 16, "ones": 16, "0000": 16, "expans": 18, "coverag": 18, "perform": 18, "optim": 18, "report": 18, "audio": [18, 21], "agnost": 19, "extent": 19, "indo": 19, "european": 19, "contain": [19, 20], "therefor": 19, "mustappearwordsratio": 19, "simpl": 20, "valuabl": 20, "illustr": 20, "tweets_eda": 20, "sampl": [20, 23], "5000": 20, "look": 20, "distribut": [20, 23], "label": 20, "clearli": 20, "long": 20, "tail": 20, "seaborn": 20, "sn": 20, "matplotlib": 20, "pyplot": 20, "plt": 20, "displot": 20, "x": 20, "number_of_lik": 20, "kind": 20, "kde": 20, "clear": [20, 23], "correl": 20, "subplot": 20, "figsiz": 20, "10": 20, "boxplot": 20, "apart": 20, "outlier": 20, "least": 20, "has_emoji": 20, "els": 20, "focus": 21, "help": 21, "unstructur": 21, "As": 21, "expand": 21, "ad": 21, "well": 21, "ootb": 21, "integr": 21, "mlop": [21, 23], "tool": [21, 23], "come": [22, 23], "soon": 22, "recent": 23, "advanc": 23, "rise": 23, "llm": 23, "acceler": 23, "adopt": 23, "textual": 23, "mainstream": 23, "commod": 23, "question": 23, "answer": 23, "classif": 23, "translat": 23, "forth": 23, "small": 23, "But": 23, "deploi": 23, "first": 23, "phase": 23, "lifecycl": 23, "ensur": 23, "govern": 23, "practic": 23, "place": 23, "avoid": 23, "unnecessari": 23, "busi": 23, "damag": 23, "risk": 23, "howev": 23, "deep": 23, "learn": 23, "harder": 23, "supervis": 23, "counterpart": 23, "meaning": 23, "potenti": 23, "drift": 23, "qualiti": 23, "space": 23, "scientist": 23, "eleg": 23, "wai": 23, "properti": 23, "track": 23, "ongo": 23, "interpret": 23, "fashion": 23, "In": 23, "togeth": 23, "commun": 23, "edit": 23, "visibl": 23, "sign": 23, "account": 23, "signup": 23, "build": 23, "upload": 23, "production_data": 23, "production_data_with_metafeatur": 23, "transaction_id": 23, "sw": 23, "transact": 23, "log_record": 23, "model_id": 23, "version_id": 23, "record": 23, "to_dict": 23, "orient": 23, "behavior": 23, "put": 23, "polici": 23, "alert": 23, "chang": 23, "across": 23}, "objects": {"": [[1, 0, 0, "-", "elemeta"]], "elemeta": [[2, 0, 0, "-", "dataset"], [3, 0, 0, "-", "nlp"]], "elemeta.dataset": [[2, 0, 0, "-", "dataset"]], "elemeta.dataset.dataset": [[2, 1, 1, "", "get_avengers_endgame_tweets"], [2, 1, 1, "", "get_imdb_reviews"], [2, 1, 1, "", "get_tweets_likes"]], "elemeta.nlp": [[3, 2, 1, "", "english_punctuations"], [3, 2, 1, "", "english_stopwords"], [3, 2, 1, "", "extended_punctuations"], [4, 0, 0, "-", "extractors"], [7, 0, 0, "-", "runners"]], "elemeta.nlp.extractors": [[4, 1, 1, "", "avg_check_basic"], [5, 0, 0, "-", "high_level"], [4, 1, 1, "", "length_check_basic"], [6, 0, 0, "-", "low_level"]], "elemeta.nlp.extractors.high_level": [[5, 0, 0, "-", "acronym_count"], [5, 0, 0, "-", "avg_word_length"], [5, 0, 0, "-", "capital_letters_ratio"], [5, 0, 0, "-", "date_count"], [5, 0, 0, "-", "detect_langauge_langdetect"], [5, 0, 0, "-", "email_count"], [5, 0, 0, "-", "emoji_count"], [5, 0, 0, "-", "hashtag_count"], [5, 0, 0, "-", "hinted_profanity_sentence_count"], [5, 0, 0, "-", "hinted_profanity_words_count"], [5, 0, 0, "-", "link_count"], [5, 0, 0, "-", "mention_count"], [5, 0, 0, "-", "must_appear_words_percentage"], [5, 0, 0, "-", "number_count"], [5, 0, 0, "-", "out_of_vocabulary_count"], [5, 0, 0, "-", "punctuation_count"], [5, 0, 0, "-", "regex_match_count"], [5, 0, 0, "-", "sentence_avg_length"], [5, 0, 0, "-", "sentence_count"], [5, 0, 0, "-", "sentiment_polarity"], [5, 0, 0, "-", "sentiment_subjectivity"], [5, 0, 0, "-", "special_chars_count"], [5, 0, 0, "-", "stop_words_count"], [5, 0, 0, "-", "syllable_count"], [5, 0, 0, "-", "text_complexity"], [5, 0, 0, "-", "text_length"], [5, 0, 0, "-", "unique_word_count"], [5, 0, 0, "-", "unique_word_ratio"], [5, 0, 0, "-", "word_count"], [5, 0, 0, "-", "word_regex_matches_count"]], "elemeta.nlp.extractors.high_level.acronym_count": [[5, 3, 1, "", "AcronymCount"]], "elemeta.nlp.extractors.high_level.avg_word_length": [[5, 3, 1, "", "AvgWordLength"]], "elemeta.nlp.extractors.high_level.capital_letters_ratio": [[5, 3, 1, "", "CapitalLettersRatio"]], "elemeta.nlp.extractors.high_level.capital_letters_ratio.CapitalLettersRatio": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.date_count": [[5, 3, 1, "", "DateCount"]], "elemeta.nlp.extractors.high_level.date_count.DateCount": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.detect_langauge_langdetect": [[5, 3, 1, "", "DetectLanguage"]], "elemeta.nlp.extractors.high_level.detect_langauge_langdetect.DetectLanguage": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.email_count": [[5, 3, 1, "", "EmailCount"]], "elemeta.nlp.extractors.high_level.email_count.EmailCount": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.emoji_count": [[5, 3, 1, "", "EmojiCount"]], "elemeta.nlp.extractors.high_level.emoji_count.EmojiCount": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.hashtag_count": [[5, 3, 1, "", "HashtagCount"]], "elemeta.nlp.extractors.high_level.hinted_profanity_sentence_count": [[5, 3, 1, "", "HintedProfanitySentenceCount"]], "elemeta.nlp.extractors.high_level.hinted_profanity_words_count": [[5, 3, 1, "", "HintedProfanityWordsCount"]], "elemeta.nlp.extractors.high_level.link_count": [[5, 3, 1, "", "LinkCount"]], "elemeta.nlp.extractors.high_level.mention_count": [[5, 3, 1, "", "MentionCount"]], "elemeta.nlp.extractors.high_level.must_appear_words_percentage": [[5, 3, 1, "", "MustAppearWordsPercentage"]], "elemeta.nlp.extractors.high_level.number_count": [[5, 3, 1, "", "NumberCount"]], "elemeta.nlp.extractors.high_level.number_count.NumberCount": [[5, 4, 1, "", "extract"], [5, 4, 1, "", "validator"]], "elemeta.nlp.extractors.high_level.out_of_vocabulary_count": [[5, 3, 1, "", "OutOfVocabularyCount"]], "elemeta.nlp.extractors.high_level.out_of_vocabulary_count.OutOfVocabularyCount": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.punctuation_count": [[5, 3, 1, "", "PunctuationCount"]], "elemeta.nlp.extractors.high_level.punctuation_count.PunctuationCount": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.regex_match_count": [[5, 3, 1, "", "RegexMatchCount"]], "elemeta.nlp.extractors.high_level.regex_match_count.RegexMatchCount": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.sentence_avg_length": [[5, 3, 1, "", "SentenceAvgLength"]], "elemeta.nlp.extractors.high_level.sentence_count": [[5, 3, 1, "", "SentenceCount"]], "elemeta.nlp.extractors.high_level.sentiment_polarity": [[5, 3, 1, "", "SentimentPolarity"]], "elemeta.nlp.extractors.high_level.sentiment_polarity.SentimentPolarity": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.sentiment_subjectivity": [[5, 3, 1, "", "SentimentSubjectivity"]], "elemeta.nlp.extractors.high_level.sentiment_subjectivity.SentimentSubjectivity": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.special_chars_count": [[5, 3, 1, "", "SpecialCharsCount"]], "elemeta.nlp.extractors.high_level.stop_words_count": [[5, 3, 1, "", "StopWordsCount"]], "elemeta.nlp.extractors.high_level.syllable_count": [[5, 3, 1, "", "SyllableCount"]], "elemeta.nlp.extractors.high_level.syllable_count.SyllableCount": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.text_complexity": [[5, 3, 1, "", "TextComplexity"]], "elemeta.nlp.extractors.high_level.text_complexity.TextComplexity": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.text_length": [[5, 3, 1, "", "TextLength"]], "elemeta.nlp.extractors.high_level.text_length.TextLength": [[5, 4, 1, "", "extract"]], "elemeta.nlp.extractors.high_level.unique_word_count": [[5, 3, 1, "", "UniqueWordCount"]], "elemeta.nlp.extractors.high_level.unique_word_ratio": [[5, 3, 1, "", "UniqueWordRatio"]], "elemeta.nlp.extractors.high_level.word_count": [[5, 3, 1, "", "WordCount"]], "elemeta.nlp.extractors.high_level.word_regex_matches_count": [[5, 3, 1, "", "WordRegexMatchesCount"]], "elemeta.nlp.extractors.low_level": [[6, 0, 0, "-", "abstract_text_metafeature_extractor"], [6, 0, 0, "-", "abstract_text_pair_metafeature_extractor"], [6, 0, 0, "-", "avg_token_length"], [6, 0, 0, "-", "hinted_profanity_token_count"], [6, 0, 0, "-", "must_appear_tokens_parentage"], [6, 0, 0, "-", "regex_token_matches_count"], [6, 0, 0, "-", "tokens_count"], [6, 0, 0, "-", "unique_token_count"], [6, 0, 0, "-", "unique_token_ratio"]], "elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor": [[6, 3, 1, "", "AbstractTextMetafeatureExtractor"]], "elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor.AbstractTextMetafeatureExtractor": [[6, 4, 1, "", "extract"]], "elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor": [[6, 3, 1, "", "AbstractTextPairMetafeatureExtractor"]], "elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor.AbstractTextPairMetafeatureExtractor": [[6, 4, 1, "", "extract"]], "elemeta.nlp.extractors.low_level.avg_token_length": [[6, 3, 1, "", "AvgTokenLength"]], "elemeta.nlp.extractors.low_level.avg_token_length.AvgTokenLength": [[6, 4, 1, "", "extract"]], "elemeta.nlp.extractors.low_level.hinted_profanity_token_count": [[6, 3, 1, "", "HintedProfanityTokensCount"]], "elemeta.nlp.extractors.low_level.hinted_profanity_token_count.HintedProfanityTokensCount": [[6, 4, 1, "", "extract"]], "elemeta.nlp.extractors.low_level.must_appear_tokens_parentage": [[6, 3, 1, "", "MustAppearTokensPercentage"]], "elemeta.nlp.extractors.low_level.must_appear_tokens_parentage.MustAppearTokensPercentage": [[6, 4, 1, "", "extract"]], "elemeta.nlp.extractors.low_level.regex_token_matches_count": [[6, 3, 1, "", "TokenRegexMatchesCount"]], "elemeta.nlp.extractors.low_level.regex_token_matches_count.TokenRegexMatchesCount": [[6, 4, 1, "", "extract"], [6, 4, 1, "", "validator"]], "elemeta.nlp.extractors.low_level.tokens_count": [[6, 3, 1, "", "TokensCount"]], "elemeta.nlp.extractors.low_level.tokens_count.TokensCount": [[6, 4, 1, "", "extract"]], "elemeta.nlp.extractors.low_level.unique_token_count": [[6, 3, 1, "", "UniqueTokenCount"]], "elemeta.nlp.extractors.low_level.unique_token_count.UniqueTokenCount": [[6, 4, 1, "", "extract"]], "elemeta.nlp.extractors.low_level.unique_token_ratio": [[6, 3, 1, "", "UniqueTokensRatio"]], "elemeta.nlp.extractors.low_level.unique_token_ratio.UniqueTokensRatio": [[6, 4, 1, "", "extract"]], "elemeta.nlp.runners": [[7, 0, 0, "-", "metafeature_extractors_runner"], [7, 0, 0, "-", "pair_metafeature_extractors_runner"]], "elemeta.nlp.runners.metafeature_extractors_runner": [[7, 3, 1, "", "MetafeatureExtractorsRunner"]], "elemeta.nlp.runners.metafeature_extractors_runner.MetafeatureExtractorsRunner": [[7, 4, 1, "", "add_metafeature_extractor"], [7, 5, 1, "", "metafeature_extractors"], [7, 4, 1, "id0", "run"], [7, 4, 1, "id3", "run_on_dataframe"]], "elemeta.nlp.runners.pair_metafeature_extractors_runner": [[7, 3, 1, "", "PairMetafeatureExtractorsRunner"], [7, 3, 1, "", "PairMetafeatureExtractorsRunnerResult"]], "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunner": [[7, 4, 1, "", "run"]], "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunnerResult": [[7, 5, 1, "", "input_1"], [7, 5, 1, "", "input_1_and_2"], [7, 5, 1, "", "input_2"], [7, 5, 1, "", "model_config"], [7, 5, 1, "", "model_fields"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": 0, "doc": 0, "elemeta": [1, 2, 3, 4, 5, 6, 7, 8, 15, 17], "packag": [1, 2, 3, 4, 5, 6, 7], "subpackag": [1, 3, 4], "modul": [1, 2, 3, 4, 5, 6, 7], "content": [1, 2, 3, 4, 5, 6, 7, 15], "dataset": 2, "submodul": [2, 5, 6, 7], "nlp": [3, 4, 5, 6, 7], "extractor": [4, 5, 6, 10, 11, 12, 14], "high_level": 5, "acronym_count": 5, "avg_word_length": 5, "capital_letters_ratio": 5, "date_count": 5, "detect_langauge_langdetect": 5, "email_count": 5, "embed": [5, 16], "emoji_count": 5, "hashtag_count": 5, "hinted_profanity_sentence_count": 5, "hinted_profanity_words_count": 5, "injection_similar": 5, "jailbreak_similar": 5, "link_count": 5, "mention_count": 5, "must_appear_words_percentag": 5, "number_count": 5, "out_of_vocabulary_count": 5, "pii_identifi": 5, "punctuation_count": 5, "refusal_similar": 5, "regex_match_count": 5, "semantic_text_pair_similar": 5, "sentence_avg_length": 5, "sentence_count": 5, "sentiment_polar": 5, "sentiment_subject": 5, "special_chars_count": 5, "stop_words_count": 5, "syllable_count": 5, "text_complex": 5, "text_length": 5, "toxicity_extractor": 5, "unique_word_count": 5, "unique_word_ratio": 5, "word_count": 5, "word_regex_matches_count": 5, "low_level": 6, "abstract_text_metafeature_extractor": 6, "abstract_text_pair_metafeature_extractor": 6, "avg_token_length": 6, "hinted_profanity_token_count": 6, "must_appear_tokens_parentag": 6, "regex_token_matches_count": 6, "semantic_embedding_pair_similar": 6, "semantic_text_to_group_similar": 6, "tokens_count": 6, "unique_token_count": 6, "unique_token_ratio": 6, "runner": 7, "metafeature_extractors_runn": 7, "pair_metafeature_extractors_runn": 7, "faq": 8, "i": 8, "readi": 8, "public": 8, "us": [8, 21], "part": 8, "superwis": 8, "secur": 8, "commun": 8, "get": 9, "start": 9, "panda": 9, "datafram": 9, "string": 9, "creat": 10, "low": 10, "level": 10, "custom": 11, "suit": 12, "how": 13, "guid": 13, "singl": 14, "sentiment": 14, "polar": 14, "detect": 14, "langaug": 14, "metafeatur": [15, 16], "extract": 15, "unstructur": 15, "data": 15, "uniquewordratio": 16, "wordregexmatchescount": 16, "numbercount": 16, "outofvocabularycount": 16, "mustappearwordspercentag": 16, "sentencecount": 16, "sentenceavglength": 16, "wordcount": 16, "avgwordlength": 16, "textlength": 16, "stopwordscount": 16, "punctuationcount": 16, "specialcharscount": 16, "capitallettersratio": 16, "regexmatchcount": 16, "emailcount": 16, "linkcount": 16, "hashtagcount": 16, "mentioncount": 16, "syllablecount": 16, "acronymcount": 16, "datecount": 16, "sentimentpolar": 16, "sentimentsubject": 16, "detectlanguag": 16, "emojicount": 16, "hintedprofanitywordscount": 16, "hintedprofanitysentencecount": 16, "textcomplex": 16, "semantictexttogroupsimilar": 16, "injectionsimilar": 16, "jailbreaksimilar": 16, "refusalsimilar": 16, "semanticembeddingpairsimilar": 16, "roadmap": 18, "support": 19, "languag": 19, "statist": 19, "metric": 19, "contextu": 19, "eda": 20, "case": 21, "model": 22, "monitor": 23, "walkthrough": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Docs": [[0, "api-docs"]], "elemeta package": [[1, "elemeta-package"]], "Subpackages": [[1, "subpackages"], [3, "subpackages"], [4, "subpackages"]], "Module contents": [[1, "module-elemeta"], [2, "module-elemeta.dataset"], [3, "module-elemeta.nlp"], [4, "module-elemeta.nlp.extractors"], [5, "module-elemeta.nlp.extractors.high_level"], [6, "module-elemeta.nlp.extractors.low_level"], [7, "module-elemeta.nlp.runners"]], "elemeta.dataset package": [[2, "elemeta-dataset-package"]], "Submodules": [[2, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"]], "elemeta.dataset.dataset module": [[2, "module-elemeta.dataset.dataset"]], "elemeta.nlp package": [[3, "elemeta-nlp-package"]], "elemeta.nlp.extractors package": [[4, "elemeta-nlp-extractors-package"]], "elemeta.nlp.extractors.high_level package": [[5, "elemeta-nlp-extractors-high-level-package"]], "elemeta.nlp.extractors.high_level.acronym_count module": [[5, "module-elemeta.nlp.extractors.high_level.acronym_count"]], "elemeta.nlp.extractors.high_level.avg_word_length module": [[5, "module-elemeta.nlp.extractors.high_level.avg_word_length"]], "elemeta.nlp.extractors.high_level.capital_letters_ratio module": [[5, "module-elemeta.nlp.extractors.high_level.capital_letters_ratio"]], "elemeta.nlp.extractors.high_level.date_count module": [[5, "module-elemeta.nlp.extractors.high_level.date_count"]], "elemeta.nlp.extractors.high_level.detect_langauge_langdetect module": [[5, "module-elemeta.nlp.extractors.high_level.detect_langauge_langdetect"]], "elemeta.nlp.extractors.high_level.email_count module": [[5, "module-elemeta.nlp.extractors.high_level.email_count"]], "elemeta.nlp.extractors.high_level.embedding module": [[5, "elemeta-nlp-extractors-high-level-embedding-module"]], "elemeta.nlp.extractors.high_level.emoji_count module": [[5, "module-elemeta.nlp.extractors.high_level.emoji_count"]], "elemeta.nlp.extractors.high_level.hashtag_count module": [[5, "module-elemeta.nlp.extractors.high_level.hashtag_count"]], "elemeta.nlp.extractors.high_level.hinted_profanity_sentence_count module": [[5, "module-elemeta.nlp.extractors.high_level.hinted_profanity_sentence_count"]], "elemeta.nlp.extractors.high_level.hinted_profanity_words_count module": [[5, "module-elemeta.nlp.extractors.high_level.hinted_profanity_words_count"]], "elemeta.nlp.extractors.high_level.injection_similarity module": [[5, "elemeta-nlp-extractors-high-level-injection-similarity-module"]], "elemeta.nlp.extractors.high_level.jailbreak_similarity module": [[5, "elemeta-nlp-extractors-high-level-jailbreak-similarity-module"]], "elemeta.nlp.extractors.high_level.link_count module": [[5, "module-elemeta.nlp.extractors.high_level.link_count"]], "elemeta.nlp.extractors.high_level.mention_count module": [[5, "module-elemeta.nlp.extractors.high_level.mention_count"]], "elemeta.nlp.extractors.high_level.must_appear_words_percentage module": [[5, "module-elemeta.nlp.extractors.high_level.must_appear_words_percentage"]], "elemeta.nlp.extractors.high_level.number_count module": [[5, "module-elemeta.nlp.extractors.high_level.number_count"]], "elemeta.nlp.extractors.high_level.out_of_vocabulary_count module": [[5, "module-elemeta.nlp.extractors.high_level.out_of_vocabulary_count"]], "elemeta.nlp.extractors.high_level.pii_identifier module": [[5, "elemeta-nlp-extractors-high-level-pii-identifier-module"]], "elemeta.nlp.extractors.high_level.punctuation_count module": [[5, "module-elemeta.nlp.extractors.high_level.punctuation_count"]], "elemeta.nlp.extractors.high_level.refusal_similarity module": [[5, "elemeta-nlp-extractors-high-level-refusal-similarity-module"]], "elemeta.nlp.extractors.high_level.regex_match_count module": [[5, "module-elemeta.nlp.extractors.high_level.regex_match_count"]], "elemeta.nlp.extractors.high_level.semantic_text_pair_similarity module": [[5, "elemeta-nlp-extractors-high-level-semantic-text-pair-similarity-module"]], "elemeta.nlp.extractors.high_level.sentence_avg_length module": [[5, "module-elemeta.nlp.extractors.high_level.sentence_avg_length"]], "elemeta.nlp.extractors.high_level.sentence_count module": [[5, "module-elemeta.nlp.extractors.high_level.sentence_count"]], "elemeta.nlp.extractors.high_level.sentiment_polarity module": [[5, "module-elemeta.nlp.extractors.high_level.sentiment_polarity"]], "elemeta.nlp.extractors.high_level.sentiment_subjectivity module": [[5, "module-elemeta.nlp.extractors.high_level.sentiment_subjectivity"]], "elemeta.nlp.extractors.high_level.special_chars_count module": [[5, "module-elemeta.nlp.extractors.high_level.special_chars_count"]], "elemeta.nlp.extractors.high_level.stop_words_count module": [[5, "module-elemeta.nlp.extractors.high_level.stop_words_count"]], "elemeta.nlp.extractors.high_level.syllable_count module": [[5, "module-elemeta.nlp.extractors.high_level.syllable_count"]], "elemeta.nlp.extractors.high_level.text_complexity module": [[5, "module-elemeta.nlp.extractors.high_level.text_complexity"]], "elemeta.nlp.extractors.high_level.text_length module": [[5, "module-elemeta.nlp.extractors.high_level.text_length"]], "elemeta.nlp.extractors.high_level.toxicity_extractor module": [[5, "elemeta-nlp-extractors-high-level-toxicity-extractor-module"]], "elemeta.nlp.extractors.high_level.unique_word_count module": [[5, "module-elemeta.nlp.extractors.high_level.unique_word_count"]], "elemeta.nlp.extractors.high_level.unique_word_ratio module": [[5, "module-elemeta.nlp.extractors.high_level.unique_word_ratio"]], "elemeta.nlp.extractors.high_level.word_count module": [[5, "module-elemeta.nlp.extractors.high_level.word_count"]], "elemeta.nlp.extractors.high_level.word_regex_matches_count module": [[5, "module-elemeta.nlp.extractors.high_level.word_regex_matches_count"]], "elemeta.nlp.extractors.low_level package": [[6, "elemeta-nlp-extractors-low-level-package"]], "elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor module": [[6, "module-elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor"]], "elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor module": [[6, "module-elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor"]], "elemeta.nlp.extractors.low_level.avg_token_length module": [[6, "module-elemeta.nlp.extractors.low_level.avg_token_length"]], "elemeta.nlp.extractors.low_level.hinted_profanity_token_count module": [[6, "module-elemeta.nlp.extractors.low_level.hinted_profanity_token_count"]], "elemeta.nlp.extractors.low_level.must_appear_tokens_parentage module": [[6, "module-elemeta.nlp.extractors.low_level.must_appear_tokens_parentage"]], "elemeta.nlp.extractors.low_level.regex_token_matches_count module": [[6, "module-elemeta.nlp.extractors.low_level.regex_token_matches_count"]], "elemeta.nlp.extractors.low_level.semantic_embedding_pair_similarity module": [[6, "elemeta-nlp-extractors-low-level-semantic-embedding-pair-similarity-module"]], "elemeta.nlp.extractors.low_level.semantic_text_to_group_similarity module": [[6, "elemeta-nlp-extractors-low-level-semantic-text-to-group-similarity-module"]], "elemeta.nlp.extractors.low_level.tokens_count module": [[6, "module-elemeta.nlp.extractors.low_level.tokens_count"]], "elemeta.nlp.extractors.low_level.unique_token_count module": [[6, "module-elemeta.nlp.extractors.low_level.unique_token_count"]], "elemeta.nlp.extractors.low_level.unique_token_ratio module": [[6, "module-elemeta.nlp.extractors.low_level.unique_token_ratio"]], "elemeta.nlp.runners package": [[7, "elemeta-nlp-runners-package"]], "elemeta.nlp.runners.metafeature_extractors_runner module": [[7, "module-elemeta.nlp.runners.metafeature_extractors_runner"]], "elemeta.nlp.runners.pair_metafeature_extractors_runner module": [[7, "module-elemeta.nlp.runners.pair_metafeature_extractors_runner"]], "FAQ": [[8, "faq"]], "Is Elemeta ready for public use?": [[8, "is-elemeta-ready-for-public-use"]], "Is Elemeta part of Superwise?": [[8, "is-elemeta-part-of-superwise"]], "Security": [[8, "security"]], "Community": [[8, "community"]], "Getting Started": [[9, "getting-started"]], "Pandas DataFrames": [[9, "pandas-dataframes"]], "Strings": [[9, "strings"]], "Create Low Level Extractor": [[10, "create-low-level-extractor"]], "Custom Extractor": [[11, "custom-extractor"]], "Extractor Suite": [[12, "extractor-suite"]], "How to Guides": [[13, "how-to-guides"]], "Single Extractor": [[14, "single-extractor"]], "Sentiment Polarity": [[14, "sentiment-polarity"]], "Detect Langauge": [[14, "detect-langauge"]], "Elemeta: Metafeature Extraction for Unstructured Data": [[15, "elemeta-metafeature-extraction-for-unstructured-data"]], "Contents:": [[15, null]], "Metafeatures": [[16, "metafeatures"]], "UniqueWordRatio": [[16, "uniquewordratio"]], "WordRegexMatchesCount": [[16, "wordregexmatchescount"]], "NumberCount": [[16, "numbercount"]], "OutOfVocabularyCount": [[16, "outofvocabularycount"]], "MustAppearWordsPercentage": [[16, "mustappearwordspercentage"]], "SentenceCount": [[16, "sentencecount"]], "SentenceAvgLength": [[16, "sentenceavglength"]], "WordCount": [[16, "wordcount"]], "AvgWordLength": [[16, "avgwordlength"]], "TextLength": [[16, "textlength"]], "StopWordsCount": [[16, "stopwordscount"]], "PunctuationCount": [[16, "punctuationcount"]], "SpecialCharsCount": [[16, "specialcharscount"]], "CapitalLettersRatio": [[16, "capitallettersratio"]], "RegexMatchCount": [[16, "regexmatchcount"]], "EmailCount": [[16, "emailcount"]], "LinkCount": [[16, "linkcount"]], "HashtagCount": [[16, "hashtagcount"]], "MentionCount": [[16, "mentioncount"]], "SyllableCount": [[16, "syllablecount"]], "AcronymCount": [[16, "acronymcount"]], "DateCount": [[16, "datecount"]], "SentimentPolarity": [[16, "sentimentpolarity"]], "SentimentSubjectivity": [[16, "sentimentsubjectivity"]], "DetectLanguage": [[16, "detectlanguage"]], "EmojiCount": [[16, "emojicount"]], "HintedProfanityWordsCount": [[16, "hintedprofanitywordscount"]], "HintedProfanitySentenceCount": [[16, "hintedprofanitysentencecount"]], "TextComplexity": [[16, "textcomplexity"]], "SemanticTextToGroupSimilarity": [[16, "semantictexttogroupsimilarity"], [16, "id4"]], "InjectionSimilarity": [[16, "injectionsimilarity"]], "JailBreakSimilarity": [[16, "jailbreaksimilarity"]], "RefusalSimilarity": [[16, "refusalsimilarity"]], "Embedding": [[16, "embedding"]], "SemanticEmbeddingPairSimilarity": [[16, "semanticembeddingpairsimilarity"]], "elemeta": [[17, "elemeta"]], "Roadmap": [[18, "roadmap"]], "Supported Languages": [[19, "supported-languages"]], "Statistical metrics": [[19, "statistical-metrics"]], "Contextual metrics": [[19, "contextual-metrics"]], "EDA": [[20, "eda"]], "Use Cases": [[21, "use-cases"]], "Modeling": [[22, "modeling"]], "Monitoring": [[23, "monitoring"]], "Walkthrough": [[23, "walkthrough"]]}, "indexentries": {"elemeta": [[1, "module-elemeta"]], "module": [[1, "module-elemeta"], [2, "module-elemeta.dataset"], [2, "module-elemeta.dataset.dataset"], [3, "module-elemeta.nlp"], [4, "module-elemeta.nlp.extractors"], [5, "module-elemeta.nlp.extractors.high_level"], [5, "module-elemeta.nlp.extractors.high_level.acronym_count"], [5, "module-elemeta.nlp.extractors.high_level.avg_word_length"], [5, "module-elemeta.nlp.extractors.high_level.capital_letters_ratio"], [5, "module-elemeta.nlp.extractors.high_level.date_count"], [5, "module-elemeta.nlp.extractors.high_level.detect_langauge_langdetect"], [5, "module-elemeta.nlp.extractors.high_level.email_count"], [5, "module-elemeta.nlp.extractors.high_level.emoji_count"], [5, "module-elemeta.nlp.extractors.high_level.hashtag_count"], [5, "module-elemeta.nlp.extractors.high_level.hinted_profanity_sentence_count"], [5, "module-elemeta.nlp.extractors.high_level.hinted_profanity_words_count"], [5, "module-elemeta.nlp.extractors.high_level.link_count"], [5, "module-elemeta.nlp.extractors.high_level.mention_count"], [5, "module-elemeta.nlp.extractors.high_level.must_appear_words_percentage"], [5, "module-elemeta.nlp.extractors.high_level.number_count"], [5, "module-elemeta.nlp.extractors.high_level.out_of_vocabulary_count"], [5, "module-elemeta.nlp.extractors.high_level.punctuation_count"], [5, "module-elemeta.nlp.extractors.high_level.regex_match_count"], [5, "module-elemeta.nlp.extractors.high_level.sentence_avg_length"], [5, "module-elemeta.nlp.extractors.high_level.sentence_count"], [5, "module-elemeta.nlp.extractors.high_level.sentiment_polarity"], [5, "module-elemeta.nlp.extractors.high_level.sentiment_subjectivity"], [5, "module-elemeta.nlp.extractors.high_level.special_chars_count"], [5, "module-elemeta.nlp.extractors.high_level.stop_words_count"], [5, "module-elemeta.nlp.extractors.high_level.syllable_count"], [5, "module-elemeta.nlp.extractors.high_level.text_complexity"], [5, "module-elemeta.nlp.extractors.high_level.text_length"], [5, "module-elemeta.nlp.extractors.high_level.unique_word_count"], [5, "module-elemeta.nlp.extractors.high_level.unique_word_ratio"], [5, "module-elemeta.nlp.extractors.high_level.word_count"], [5, "module-elemeta.nlp.extractors.high_level.word_regex_matches_count"], [6, "module-elemeta.nlp.extractors.low_level"], [6, "module-elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor"], [6, "module-elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor"], [6, "module-elemeta.nlp.extractors.low_level.avg_token_length"], [6, "module-elemeta.nlp.extractors.low_level.hinted_profanity_token_count"], [6, "module-elemeta.nlp.extractors.low_level.must_appear_tokens_parentage"], [6, "module-elemeta.nlp.extractors.low_level.regex_token_matches_count"], [6, "module-elemeta.nlp.extractors.low_level.tokens_count"], [6, "module-elemeta.nlp.extractors.low_level.unique_token_count"], [6, "module-elemeta.nlp.extractors.low_level.unique_token_ratio"], [7, "module-elemeta.nlp.runners"], [7, "module-elemeta.nlp.runners.metafeature_extractors_runner"], [7, "module-elemeta.nlp.runners.pair_metafeature_extractors_runner"]], "elemeta.dataset": [[2, "module-elemeta.dataset"]], "elemeta.dataset.dataset": [[2, "module-elemeta.dataset.dataset"]], "get_avengers_endgame_tweets() (in module elemeta.dataset.dataset)": [[2, "elemeta.dataset.dataset.get_avengers_endgame_tweets"]], "get_imdb_reviews() (in module elemeta.dataset.dataset)": [[2, "elemeta.dataset.dataset.get_imdb_reviews"]], "get_tweets_likes() (in module elemeta.dataset.dataset)": [[2, "elemeta.dataset.dataset.get_tweets_likes"]], "elemeta.nlp": [[3, "module-elemeta.nlp"]], "english_punctuations (in module elemeta.nlp)": [[3, "elemeta.nlp.english_punctuations"]], "english_stopwords (in module elemeta.nlp)": [[3, "elemeta.nlp.english_stopwords"]], "extended_punctuations (in module elemeta.nlp)": [[3, "elemeta.nlp.extended_punctuations"]], "avg_check_basic() (in module elemeta.nlp.extractors)": [[4, "elemeta.nlp.extractors.avg_check_basic"]], "elemeta.nlp.extractors": [[4, "module-elemeta.nlp.extractors"]], "length_check_basic() (in module elemeta.nlp.extractors)": [[4, "elemeta.nlp.extractors.length_check_basic"]], "acronymcount (class in elemeta.nlp.extractors.high_level.acronym_count)": [[5, "elemeta.nlp.extractors.high_level.acronym_count.AcronymCount"]], "avgwordlength (class in elemeta.nlp.extractors.high_level.avg_word_length)": [[5, "elemeta.nlp.extractors.high_level.avg_word_length.AvgWordLength"]], "capitallettersratio (class in elemeta.nlp.extractors.high_level.capital_letters_ratio)": [[5, "elemeta.nlp.extractors.high_level.capital_letters_ratio.CapitalLettersRatio"]], "datecount (class in elemeta.nlp.extractors.high_level.date_count)": [[5, "elemeta.nlp.extractors.high_level.date_count.DateCount"]], "detectlanguage (class in elemeta.nlp.extractors.high_level.detect_langauge_langdetect)": [[5, "elemeta.nlp.extractors.high_level.detect_langauge_langdetect.DetectLanguage"]], "emailcount (class in elemeta.nlp.extractors.high_level.email_count)": [[5, "elemeta.nlp.extractors.high_level.email_count.EmailCount"]], "emojicount (class in elemeta.nlp.extractors.high_level.emoji_count)": [[5, "elemeta.nlp.extractors.high_level.emoji_count.EmojiCount"]], "hashtagcount (class in elemeta.nlp.extractors.high_level.hashtag_count)": [[5, "elemeta.nlp.extractors.high_level.hashtag_count.HashtagCount"]], "hintedprofanitysentencecount (class in elemeta.nlp.extractors.high_level.hinted_profanity_sentence_count)": [[5, "elemeta.nlp.extractors.high_level.hinted_profanity_sentence_count.HintedProfanitySentenceCount"]], "hintedprofanitywordscount (class in elemeta.nlp.extractors.high_level.hinted_profanity_words_count)": [[5, "elemeta.nlp.extractors.high_level.hinted_profanity_words_count.HintedProfanityWordsCount"]], "linkcount (class in elemeta.nlp.extractors.high_level.link_count)": [[5, "elemeta.nlp.extractors.high_level.link_count.LinkCount"]], "mentioncount (class in elemeta.nlp.extractors.high_level.mention_count)": [[5, "elemeta.nlp.extractors.high_level.mention_count.MentionCount"]], "mustappearwordspercentage (class in elemeta.nlp.extractors.high_level.must_appear_words_percentage)": [[5, "elemeta.nlp.extractors.high_level.must_appear_words_percentage.MustAppearWordsPercentage"]], "numbercount (class in elemeta.nlp.extractors.high_level.number_count)": [[5, "elemeta.nlp.extractors.high_level.number_count.NumberCount"]], "outofvocabularycount (class in elemeta.nlp.extractors.high_level.out_of_vocabulary_count)": [[5, "elemeta.nlp.extractors.high_level.out_of_vocabulary_count.OutOfVocabularyCount"]], "punctuationcount (class in elemeta.nlp.extractors.high_level.punctuation_count)": [[5, "elemeta.nlp.extractors.high_level.punctuation_count.PunctuationCount"]], "regexmatchcount (class in elemeta.nlp.extractors.high_level.regex_match_count)": [[5, "elemeta.nlp.extractors.high_level.regex_match_count.RegexMatchCount"]], "sentenceavglength (class in elemeta.nlp.extractors.high_level.sentence_avg_length)": [[5, "elemeta.nlp.extractors.high_level.sentence_avg_length.SentenceAvgLength"]], "sentencecount (class in elemeta.nlp.extractors.high_level.sentence_count)": [[5, "elemeta.nlp.extractors.high_level.sentence_count.SentenceCount"]], "sentimentpolarity (class in elemeta.nlp.extractors.high_level.sentiment_polarity)": [[5, "elemeta.nlp.extractors.high_level.sentiment_polarity.SentimentPolarity"]], "sentimentsubjectivity (class in elemeta.nlp.extractors.high_level.sentiment_subjectivity)": [[5, "elemeta.nlp.extractors.high_level.sentiment_subjectivity.SentimentSubjectivity"]], "specialcharscount (class in elemeta.nlp.extractors.high_level.special_chars_count)": [[5, "elemeta.nlp.extractors.high_level.special_chars_count.SpecialCharsCount"]], "stopwordscount (class in elemeta.nlp.extractors.high_level.stop_words_count)": [[5, "elemeta.nlp.extractors.high_level.stop_words_count.StopWordsCount"]], "syllablecount (class in elemeta.nlp.extractors.high_level.syllable_count)": [[5, "elemeta.nlp.extractors.high_level.syllable_count.SyllableCount"]], "textcomplexity (class in elemeta.nlp.extractors.high_level.text_complexity)": [[5, "elemeta.nlp.extractors.high_level.text_complexity.TextComplexity"]], "textlength (class in elemeta.nlp.extractors.high_level.text_length)": [[5, "elemeta.nlp.extractors.high_level.text_length.TextLength"]], "uniquewordcount (class in elemeta.nlp.extractors.high_level.unique_word_count)": [[5, "elemeta.nlp.extractors.high_level.unique_word_count.UniqueWordCount"]], "uniquewordratio (class in elemeta.nlp.extractors.high_level.unique_word_ratio)": [[5, "elemeta.nlp.extractors.high_level.unique_word_ratio.UniqueWordRatio"]], "wordcount (class in elemeta.nlp.extractors.high_level.word_count)": [[5, "elemeta.nlp.extractors.high_level.word_count.WordCount"]], "wordregexmatchescount (class in elemeta.nlp.extractors.high_level.word_regex_matches_count)": [[5, "elemeta.nlp.extractors.high_level.word_regex_matches_count.WordRegexMatchesCount"]], "elemeta.nlp.extractors.high_level": [[5, "module-elemeta.nlp.extractors.high_level"]], "elemeta.nlp.extractors.high_level.acronym_count": [[5, "module-elemeta.nlp.extractors.high_level.acronym_count"]], "elemeta.nlp.extractors.high_level.avg_word_length": [[5, "module-elemeta.nlp.extractors.high_level.avg_word_length"]], "elemeta.nlp.extractors.high_level.capital_letters_ratio": [[5, "module-elemeta.nlp.extractors.high_level.capital_letters_ratio"]], "elemeta.nlp.extractors.high_level.date_count": [[5, "module-elemeta.nlp.extractors.high_level.date_count"]], "elemeta.nlp.extractors.high_level.detect_langauge_langdetect": [[5, "module-elemeta.nlp.extractors.high_level.detect_langauge_langdetect"]], "elemeta.nlp.extractors.high_level.email_count": [[5, "module-elemeta.nlp.extractors.high_level.email_count"]], "elemeta.nlp.extractors.high_level.emoji_count": [[5, "module-elemeta.nlp.extractors.high_level.emoji_count"]], "elemeta.nlp.extractors.high_level.hashtag_count": [[5, "module-elemeta.nlp.extractors.high_level.hashtag_count"]], "elemeta.nlp.extractors.high_level.hinted_profanity_sentence_count": [[5, "module-elemeta.nlp.extractors.high_level.hinted_profanity_sentence_count"]], "elemeta.nlp.extractors.high_level.hinted_profanity_words_count": [[5, "module-elemeta.nlp.extractors.high_level.hinted_profanity_words_count"]], "elemeta.nlp.extractors.high_level.link_count": [[5, "module-elemeta.nlp.extractors.high_level.link_count"]], "elemeta.nlp.extractors.high_level.mention_count": [[5, "module-elemeta.nlp.extractors.high_level.mention_count"]], "elemeta.nlp.extractors.high_level.must_appear_words_percentage": [[5, "module-elemeta.nlp.extractors.high_level.must_appear_words_percentage"]], "elemeta.nlp.extractors.high_level.number_count": [[5, "module-elemeta.nlp.extractors.high_level.number_count"]], "elemeta.nlp.extractors.high_level.out_of_vocabulary_count": [[5, "module-elemeta.nlp.extractors.high_level.out_of_vocabulary_count"]], "elemeta.nlp.extractors.high_level.punctuation_count": [[5, "module-elemeta.nlp.extractors.high_level.punctuation_count"]], "elemeta.nlp.extractors.high_level.regex_match_count": [[5, "module-elemeta.nlp.extractors.high_level.regex_match_count"]], "elemeta.nlp.extractors.high_level.sentence_avg_length": [[5, "module-elemeta.nlp.extractors.high_level.sentence_avg_length"]], "elemeta.nlp.extractors.high_level.sentence_count": [[5, "module-elemeta.nlp.extractors.high_level.sentence_count"]], "elemeta.nlp.extractors.high_level.sentiment_polarity": [[5, "module-elemeta.nlp.extractors.high_level.sentiment_polarity"]], "elemeta.nlp.extractors.high_level.sentiment_subjectivity": [[5, "module-elemeta.nlp.extractors.high_level.sentiment_subjectivity"]], "elemeta.nlp.extractors.high_level.special_chars_count": [[5, "module-elemeta.nlp.extractors.high_level.special_chars_count"]], "elemeta.nlp.extractors.high_level.stop_words_count": [[5, "module-elemeta.nlp.extractors.high_level.stop_words_count"]], "elemeta.nlp.extractors.high_level.syllable_count": [[5, "module-elemeta.nlp.extractors.high_level.syllable_count"]], "elemeta.nlp.extractors.high_level.text_complexity": [[5, "module-elemeta.nlp.extractors.high_level.text_complexity"]], "elemeta.nlp.extractors.high_level.text_length": [[5, "module-elemeta.nlp.extractors.high_level.text_length"]], "elemeta.nlp.extractors.high_level.unique_word_count": [[5, "module-elemeta.nlp.extractors.high_level.unique_word_count"]], "elemeta.nlp.extractors.high_level.unique_word_ratio": [[5, "module-elemeta.nlp.extractors.high_level.unique_word_ratio"]], "elemeta.nlp.extractors.high_level.word_count": [[5, "module-elemeta.nlp.extractors.high_level.word_count"]], "elemeta.nlp.extractors.high_level.word_regex_matches_count": [[5, "module-elemeta.nlp.extractors.high_level.word_regex_matches_count"]], "extract() (elemeta.nlp.extractors.high_level.capital_letters_ratio.capitallettersratio method)": [[5, "elemeta.nlp.extractors.high_level.capital_letters_ratio.CapitalLettersRatio.extract"]], "extract() (elemeta.nlp.extractors.high_level.date_count.datecount method)": [[5, "elemeta.nlp.extractors.high_level.date_count.DateCount.extract"]], "extract() (elemeta.nlp.extractors.high_level.detect_langauge_langdetect.detectlanguage method)": [[5, "elemeta.nlp.extractors.high_level.detect_langauge_langdetect.DetectLanguage.extract"]], "extract() (elemeta.nlp.extractors.high_level.email_count.emailcount method)": [[5, "elemeta.nlp.extractors.high_level.email_count.EmailCount.extract"]], "extract() (elemeta.nlp.extractors.high_level.emoji_count.emojicount method)": [[5, "elemeta.nlp.extractors.high_level.emoji_count.EmojiCount.extract"]], "extract() (elemeta.nlp.extractors.high_level.number_count.numbercount method)": [[5, "elemeta.nlp.extractors.high_level.number_count.NumberCount.extract"]], "extract() (elemeta.nlp.extractors.high_level.out_of_vocabulary_count.outofvocabularycount method)": [[5, "elemeta.nlp.extractors.high_level.out_of_vocabulary_count.OutOfVocabularyCount.extract"]], "extract() (elemeta.nlp.extractors.high_level.punctuation_count.punctuationcount method)": [[5, "elemeta.nlp.extractors.high_level.punctuation_count.PunctuationCount.extract"]], "extract() (elemeta.nlp.extractors.high_level.regex_match_count.regexmatchcount method)": [[5, "elemeta.nlp.extractors.high_level.regex_match_count.RegexMatchCount.extract"]], "extract() (elemeta.nlp.extractors.high_level.sentiment_polarity.sentimentpolarity method)": [[5, "elemeta.nlp.extractors.high_level.sentiment_polarity.SentimentPolarity.extract"]], "extract() (elemeta.nlp.extractors.high_level.sentiment_subjectivity.sentimentsubjectivity method)": [[5, "elemeta.nlp.extractors.high_level.sentiment_subjectivity.SentimentSubjectivity.extract"]], "extract() (elemeta.nlp.extractors.high_level.syllable_count.syllablecount method)": [[5, "elemeta.nlp.extractors.high_level.syllable_count.SyllableCount.extract"]], "extract() (elemeta.nlp.extractors.high_level.text_complexity.textcomplexity method)": [[5, "elemeta.nlp.extractors.high_level.text_complexity.TextComplexity.extract"]], "extract() (elemeta.nlp.extractors.high_level.text_length.textlength method)": [[5, "elemeta.nlp.extractors.high_level.text_length.TextLength.extract"]], "validator() (elemeta.nlp.extractors.high_level.number_count.numbercount method)": [[5, "elemeta.nlp.extractors.high_level.number_count.NumberCount.validator"]], "abstracttextmetafeatureextractor (class in elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor)": [[6, "elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor.AbstractTextMetafeatureExtractor"]], "abstracttextpairmetafeatureextractor (class in elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor)": [[6, "elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor.AbstractTextPairMetafeatureExtractor"]], "avgtokenlength (class in elemeta.nlp.extractors.low_level.avg_token_length)": [[6, "elemeta.nlp.extractors.low_level.avg_token_length.AvgTokenLength"]], "hintedprofanitytokenscount (class in elemeta.nlp.extractors.low_level.hinted_profanity_token_count)": [[6, "elemeta.nlp.extractors.low_level.hinted_profanity_token_count.HintedProfanityTokensCount"]], "mustappeartokenspercentage (class in elemeta.nlp.extractors.low_level.must_appear_tokens_parentage)": [[6, "elemeta.nlp.extractors.low_level.must_appear_tokens_parentage.MustAppearTokensPercentage"]], "tokenregexmatchescount (class in elemeta.nlp.extractors.low_level.regex_token_matches_count)": [[6, "elemeta.nlp.extractors.low_level.regex_token_matches_count.TokenRegexMatchesCount"]], "tokenscount (class in elemeta.nlp.extractors.low_level.tokens_count)": [[6, "elemeta.nlp.extractors.low_level.tokens_count.TokensCount"]], "uniquetokencount (class in elemeta.nlp.extractors.low_level.unique_token_count)": [[6, "elemeta.nlp.extractors.low_level.unique_token_count.UniqueTokenCount"]], "uniquetokensratio (class in elemeta.nlp.extractors.low_level.unique_token_ratio)": [[6, "elemeta.nlp.extractors.low_level.unique_token_ratio.UniqueTokensRatio"]], "elemeta.nlp.extractors.low_level": [[6, "module-elemeta.nlp.extractors.low_level"]], "elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor": [[6, "module-elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor"]], "elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor": [[6, "module-elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor"]], "elemeta.nlp.extractors.low_level.avg_token_length": [[6, "module-elemeta.nlp.extractors.low_level.avg_token_length"]], "elemeta.nlp.extractors.low_level.hinted_profanity_token_count": [[6, "module-elemeta.nlp.extractors.low_level.hinted_profanity_token_count"]], "elemeta.nlp.extractors.low_level.must_appear_tokens_parentage": [[6, "module-elemeta.nlp.extractors.low_level.must_appear_tokens_parentage"]], "elemeta.nlp.extractors.low_level.regex_token_matches_count": [[6, "module-elemeta.nlp.extractors.low_level.regex_token_matches_count"]], "elemeta.nlp.extractors.low_level.tokens_count": [[6, "module-elemeta.nlp.extractors.low_level.tokens_count"]], "elemeta.nlp.extractors.low_level.unique_token_count": [[6, "module-elemeta.nlp.extractors.low_level.unique_token_count"]], "elemeta.nlp.extractors.low_level.unique_token_ratio": [[6, "module-elemeta.nlp.extractors.low_level.unique_token_ratio"]], "extract() (elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor.abstracttextmetafeatureextractor method)": [[6, "elemeta.nlp.extractors.low_level.abstract_text_metafeature_extractor.AbstractTextMetafeatureExtractor.extract"]], "extract() (elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor.abstracttextpairmetafeatureextractor method)": [[6, "elemeta.nlp.extractors.low_level.abstract_text_pair_metafeature_extractor.AbstractTextPairMetafeatureExtractor.extract"]], "extract() (elemeta.nlp.extractors.low_level.avg_token_length.avgtokenlength method)": [[6, "elemeta.nlp.extractors.low_level.avg_token_length.AvgTokenLength.extract"]], "extract() (elemeta.nlp.extractors.low_level.hinted_profanity_token_count.hintedprofanitytokenscount method)": [[6, "elemeta.nlp.extractors.low_level.hinted_profanity_token_count.HintedProfanityTokensCount.extract"]], "extract() (elemeta.nlp.extractors.low_level.must_appear_tokens_parentage.mustappeartokenspercentage method)": [[6, "elemeta.nlp.extractors.low_level.must_appear_tokens_parentage.MustAppearTokensPercentage.extract"]], "extract() (elemeta.nlp.extractors.low_level.regex_token_matches_count.tokenregexmatchescount method)": [[6, "elemeta.nlp.extractors.low_level.regex_token_matches_count.TokenRegexMatchesCount.extract"]], "extract() (elemeta.nlp.extractors.low_level.tokens_count.tokenscount method)": [[6, "elemeta.nlp.extractors.low_level.tokens_count.TokensCount.extract"]], "extract() (elemeta.nlp.extractors.low_level.unique_token_count.uniquetokencount method)": [[6, "elemeta.nlp.extractors.low_level.unique_token_count.UniqueTokenCount.extract"]], "extract() (elemeta.nlp.extractors.low_level.unique_token_ratio.uniquetokensratio method)": [[6, "elemeta.nlp.extractors.low_level.unique_token_ratio.UniqueTokensRatio.extract"]], "validator() (elemeta.nlp.extractors.low_level.regex_token_matches_count.tokenregexmatchescount method)": [[6, "elemeta.nlp.extractors.low_level.regex_token_matches_count.TokenRegexMatchesCount.validator"]], "metafeatureextractorsrunner (class in elemeta.nlp.runners.metafeature_extractors_runner)": [[7, "elemeta.nlp.runners.metafeature_extractors_runner.MetafeatureExtractorsRunner"]], "pairmetafeatureextractorsrunner (class in elemeta.nlp.runners.pair_metafeature_extractors_runner)": [[7, "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunner"]], "pairmetafeatureextractorsrunnerresult (class in elemeta.nlp.runners.pair_metafeature_extractors_runner)": [[7, "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunnerResult"]], "add_metafeature_extractor() (elemeta.nlp.runners.metafeature_extractors_runner.metafeatureextractorsrunner method)": [[7, "elemeta.nlp.runners.metafeature_extractors_runner.MetafeatureExtractorsRunner.add_metafeature_extractor"]], "elemeta.nlp.runners": [[7, "module-elemeta.nlp.runners"]], "elemeta.nlp.runners.metafeature_extractors_runner": [[7, "module-elemeta.nlp.runners.metafeature_extractors_runner"]], "elemeta.nlp.runners.pair_metafeature_extractors_runner": [[7, "module-elemeta.nlp.runners.pair_metafeature_extractors_runner"]], "input_1 (elemeta.nlp.runners.pair_metafeature_extractors_runner.pairmetafeatureextractorsrunnerresult attribute)": [[7, "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunnerResult.input_1"]], "input_1_and_2 (elemeta.nlp.runners.pair_metafeature_extractors_runner.pairmetafeatureextractorsrunnerresult attribute)": [[7, "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunnerResult.input_1_and_2"]], "input_2 (elemeta.nlp.runners.pair_metafeature_extractors_runner.pairmetafeatureextractorsrunnerresult attribute)": [[7, "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunnerResult.input_2"]], "metafeature_extractors (elemeta.nlp.runners.metafeature_extractors_runner.metafeatureextractorsrunner attribute)": [[7, "elemeta.nlp.runners.metafeature_extractors_runner.MetafeatureExtractorsRunner.metafeature_extractors"]], "model_config (elemeta.nlp.runners.pair_metafeature_extractors_runner.pairmetafeatureextractorsrunnerresult attribute)": [[7, "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunnerResult.model_config"]], "model_fields (elemeta.nlp.runners.pair_metafeature_extractors_runner.pairmetafeatureextractorsrunnerresult attribute)": [[7, "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunnerResult.model_fields"]], "run() (elemeta.nlp.runners.metafeature_extractors_runner.metafeatureextractorsrunner method)": [[7, "elemeta.nlp.runners.metafeature_extractors_runner.MetafeatureExtractorsRunner.run"], [7, "id0"]], "run() (elemeta.nlp.runners.pair_metafeature_extractors_runner.pairmetafeatureextractorsrunner method)": [[7, "elemeta.nlp.runners.pair_metafeature_extractors_runner.PairMetafeatureExtractorsRunner.run"]], "run_on_dataframe() (elemeta.nlp.runners.metafeature_extractors_runner.metafeatureextractorsrunner method)": [[7, "elemeta.nlp.runners.metafeature_extractors_runner.MetafeatureExtractorsRunner.run_on_dataframe"], [7, "id3"]]}})